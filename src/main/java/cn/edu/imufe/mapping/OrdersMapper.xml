<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.imufe.dao.OrdersMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.imufe.bean.Orders" >
    <id column="oid" property="oid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="carid" property="carid" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="pricecnt" property="pricecnt" jdbcType="INTEGER" />
    <result column="extractuid" property="extractuid" jdbcType="INTEGER" />
    <result column="extractlocation" property="extractlocation" jdbcType="VARCHAR" />
    <result column="extractdate" property="extractdate" jdbcType="TIMESTAMP" />
    <result column="stilluid" property="stilluid" jdbcType="INTEGER" />
    <result column="stilllocation" property="stilllocation" jdbcType="VARCHAR" />
    <result column="stilldate" property="stilldate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  </resultMap>
    <resultMap id="BaseResultMap1" type="cn.edu.imufe.bean.vo.OrderDetail" >
    <id column="oid" property="oid" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="carid" property="carid" jdbcType="INTEGER" />
    <result column="starttime" property="starttime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="pricecnt" property="pricecnt" jdbcType="INTEGER" />
    <result column="extractuid" property="extractuid" jdbcType="INTEGER" />
    <result column="extractlocation" property="extractlocation" jdbcType="VARCHAR" />
    <result column="extractdate" property="extractdate" jdbcType="TIMESTAMP" />
    <result column="stilluid" property="stilluid" jdbcType="INTEGER" />
    <result column="stilllocation" property="stilllocation" jdbcType="VARCHAR" />
    <result column="stilldate" property="stilldate" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
  <result column="cusername" property="cusername" jdbcType="VARCHAR" />
  <result column="carname" property="carname" jdbcType="VARCHAR" />
  <result column="cphone" property="cphone" jdbcType="VARCHAR" />
  <result column="extractuname" property="extractuname" jdbcType="VARCHAR" />
  <result column="stilluname" property="stilluname" jdbcType="VARCHAR" />
  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    oid, cid, carid, starttime, endtime, pricecnt, extractuid, extractlocation, extractdate, 
    stilluid, stilllocation, stilldate, state, remarks, createtime, updatetime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.imufe.bean.OrdersExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where oid = #{oid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where oid = #{oid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.imufe.bean.OrdersExample" >
    delete from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.imufe.bean.Orders" >
    insert into orders (oid, cid, carid, 
      starttime, endtime, pricecnt, 
      extractuid, extractlocation, extractdate, 
      stilluid, stilllocation, stilldate, 
      state, remarks, createtime, 
      updatetime)
    values (#{oid,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{carid,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, #{pricecnt,jdbcType=INTEGER}, 
      #{extractuid,jdbcType=INTEGER}, #{extractlocation,jdbcType=VARCHAR}, #{extractdate,jdbcType=TIMESTAMP}, 
      #{stilluid,jdbcType=INTEGER}, #{stilllocation,jdbcType=VARCHAR}, #{stilldate,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.imufe.bean.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        oid,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="carid != null" >
        carid,
      </if>
      <if test="starttime != null" >
        starttime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="pricecnt != null" >
        pricecnt,
      </if>
      <if test="extractuid != null" >
        extractuid,
      </if>
      <if test="extractlocation != null" >
        extractlocation,
      </if>
      <if test="extractdate != null" >
        extractdate,
      </if>
      <if test="stilluid != null" >
        stilluid,
      </if>
      <if test="stilllocation != null" >
        stilllocation,
      </if>
      <if test="stilldate != null" >
        stilldate,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oid != null" >
        #{oid,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        #{carid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pricecnt != null" >
        #{pricecnt,jdbcType=INTEGER},
      </if>
      <if test="extractuid != null" >
        #{extractuid,jdbcType=INTEGER},
      </if>
      <if test="extractlocation != null" >
        #{extractlocation,jdbcType=VARCHAR},
      </if>
      <if test="extractdate != null" >
        #{extractdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stilluid != null" >
        #{stilluid,jdbcType=INTEGER},
      </if>
      <if test="stilllocation != null" >
        #{stilllocation,jdbcType=VARCHAR},
      </if>
      <if test="stilldate != null" >
        #{stilldate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.imufe.bean.OrdersExample" resultType="java.lang.Integer" >
    select count(*) from orders
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update orders
    <set >
      <if test="record.oid != null" >
        oid = #{record.oid,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.carid != null" >
        carid = #{record.carid,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        starttime = #{record.starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pricecnt != null" >
        pricecnt = #{record.pricecnt,jdbcType=INTEGER},
      </if>
      <if test="record.extractuid != null" >
        extractuid = #{record.extractuid,jdbcType=INTEGER},
      </if>
      <if test="record.extractlocation != null" >
        extractlocation = #{record.extractlocation,jdbcType=VARCHAR},
      </if>
      <if test="record.extractdate != null" >
        extractdate = #{record.extractdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stilluid != null" >
        stilluid = #{record.stilluid,jdbcType=INTEGER},
      </if>
      <if test="record.stilllocation != null" >
        stilllocation = #{record.stilllocation,jdbcType=VARCHAR},
      </if>
      <if test="record.stilldate != null" >
        stilldate = #{record.stilldate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update orders
    set oid = #{record.oid,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      carid = #{record.carid,jdbcType=INTEGER},
      starttime = #{record.starttime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      pricecnt = #{record.pricecnt,jdbcType=INTEGER},
      extractuid = #{record.extractuid,jdbcType=INTEGER},
      extractlocation = #{record.extractlocation,jdbcType=VARCHAR},
      extractdate = #{record.extractdate,jdbcType=TIMESTAMP},
      stilluid = #{record.stilluid,jdbcType=INTEGER},
      stilllocation = #{record.stilllocation,jdbcType=VARCHAR},
      stilldate = #{record.stilldate,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.imufe.bean.Orders" >
    update orders
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="carid != null" >
        carid = #{carid,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        starttime = #{starttime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="pricecnt != null" >
        pricecnt = #{pricecnt,jdbcType=INTEGER},
      </if>
      <if test="extractuid != null" >
        extractuid = #{extractuid,jdbcType=INTEGER},
      </if>
      <if test="extractlocation != null" >
        extractlocation = #{extractlocation,jdbcType=VARCHAR},
      </if>
      <if test="extractdate != null" >
        extractdate = #{extractdate,jdbcType=TIMESTAMP},
      </if>
      <if test="stilluid != null" >
        stilluid = #{stilluid,jdbcType=INTEGER},
      </if>
      <if test="stilllocation != null" >
        stilllocation = #{stilllocation,jdbcType=VARCHAR},
      </if>
      <if test="stilldate != null" >
        stilldate = #{stilldate,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.imufe.bean.Orders" >
    update orders
    set cid = #{cid,jdbcType=INTEGER},
      carid = #{carid,jdbcType=INTEGER},
      starttime = #{starttime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      pricecnt = #{pricecnt,jdbcType=INTEGER},
      extractuid = #{extractuid,jdbcType=INTEGER},
      extractlocation = #{extractlocation,jdbcType=VARCHAR},
      extractdate = #{extractdate,jdbcType=TIMESTAMP},
      stilluid = #{stilluid,jdbcType=INTEGER},
      stilllocation = #{stilllocation,jdbcType=VARCHAR},
      stilldate = #{stilldate,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where oid = #{oid,jdbcType=INTEGER}
  </update>
  <!-- 自增部分 -->
    <select id="selectAllOrderDetail" resultMap="BaseResultMap1"  >
   SELECT a.*,b.cusername,e.`name` as carname,b.cphone,c.uname as extractuname ,d.uname as stilluname
from orders a,customer b,users c,users d,car e
where a.carid=e.id
and a.cid=b.cid
and a.extractuid=c.uid
and a.stilluid=d.uid
  </select>
  
      <select id="selectOrderDetailById" resultMap="BaseResultMap1" parameterType="java.lang.Integer" >
   SELECT a.*,b.cusername,e.`name` as carname,b.cphone,c.uname as extractuname ,d.uname as stilluname
from orders a,customer b,users c,users d,car e
where a.carid=e.id
and a.cid=b.cid
and a.oid=#{oid}
  </select>
  
      <select id="selectAllOrderDetailByCId" resultMap="BaseResultMap1" parameterType="java.lang.Integer"  >
   SELECT a.*,b.cusername,e.`name` as carname,b.cphone,c.uname as extractuname ,d.uname as stilluname
from orders a,customer b,users c,users d,car e
where a.carid=e.id
and a.cid=b.cid
and a.cid=#{cid}
  </select>
</mapper>